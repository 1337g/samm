<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Activities on OWASP SAMM</title>
    <link>https://owaspsamm.org/activity/</link>
    <description>Recent content in Activities on OWASP SAMM</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://owaspsamm.org/activity/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Align Security Program with Business</title>
      <link>https://owaspsamm.org/activity/activity-g-sm-3-a/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-g-sm-3-a/</guid>
      <description>You review the application security plan periodically for ongoing applicability and support of the organization’s evolving needs and future growth. To do this, you repeat the steps from the first two maturity levels of this Security Practice at least annually. The goal is for the plan to always support the current and future needs of the organization, which ensures the program is aligned with the business. In addition to reviewing the business drivers, the organization closely monitors the success of the implementation of each of the roadmap milestones.</description>
    </item>
    
    <item>
      <title>Application risk assessments are performed to determine the risk profile.</title>
      <link>https://owaspsamm.org/activity/activity-d-ta-1-a/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-d-ta-1-a/</guid>
      <description>As an organization, you want to spend your security budget where it matters. Application risk is a good tool to guide your security spending. A risk classification helps identify which applications can pose a serious threat to the organization if they were attacked or breached. Use a simple method to evaluate the application risk per application, estimating the potential business impact that it poses for the organization in case of an attack.</description>
    </item>
    
    <item>
      <title>Apply context-specific security requirements to the application</title>
      <link>https://owaspsamm.org/activity/activity-d-sr-1-a/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-d-sr-1-a/</guid>
      <description>Perform a review of the functional requirements of the software project. Identify relevant security requirements (i.e. expectations) for this functionality by reasoning on the desired confidentiality, integrity or availability of the service or data offered by the software project. Requirements state the objective (e.g., “personal data for the registration process should be transferred and stored securely”), but not the actual measure to achieve the objective (e.g., “use TLSv1.2 for secure transfer”).</description>
    </item>
    
    <item>
      <title>Customize training for developer roles</title>
      <link>https://owaspsamm.org/activity/activity-g-eg-2-a/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-g-eg-2-a/</guid>
      <description>Conduct instructor-led or CBT security training specific to the organization’s roles and technologies, starting with the core development team. The organization customizes training for product managers, software developers, testers, and security auditors, based on each group’s technical needs. - Product managers train on topics related to SAMM business functions and security practices, with emphasis on security requirements, threat modeling, and defect tracking. - Developers train on coding standards and best practices for the technologies they work with to ensure the training directly benefits application security.</description>
    </item>
    
    <item>
      <title>Define Security Metrics</title>
      <link>https://owaspsamm.org/activity/activity-g-sm-1-b/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-g-sm-1-b/</guid>
      <description>Define and document metrics to evaluate the effectiveness and efficiency of the application security program. This way improvements are measurable and you can use them to secure future support and funding for the program. Considering the dynamic nature of most development environments, metrics should be comprised of measurements in the following categories * Effort metrics measure the effort spent on security. For example training hours, time spent performing code reviews, and number of applications scanned for vulnerabilities.</description>
    </item>
    
    <item>
      <title>Define security policies and standards</title>
      <link>https://owaspsamm.org/activity/activity-g-pc-1-a/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-g-pc-1-a/</guid>
      <description>Develop a library of policies and standards to govern all aspects of software development in the organization. Policies and standards are based on existing industry standards and appropriate for the organization’s industry. Due to the full range of technology-specific limitations and best practices, review proposed standards with the various product teams. With the overarching objective of increasing security of the applications and computing infrastructure, invite product teams to offer feedback on any aspects of the standards that would not be feasible or cost-effective to implement, as well as opportunities for standards to go further with little effort on the product teams.</description>
    </item>
    
    <item>
      <title>Develop an In-House Application Security Community</title>
      <link>https://owaspsamm.org/activity/activity-g-eg-3-b/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-g-eg-3-b/</guid>
      <description>Security is the responsibility of all employees, not just the Information Security team. Deploy communication and knowledge sharing platforms to help developers build communities around different technologies, tools, and programming languages. In these communities employees share information, discuss challenges with other developers, and search the knowledge base for answers to previously discussed issues. Form communities around roles and responsibilities and enable developers and engineers from different teams and business units to communicate freely and benefit from each other’s expertise.</description>
    </item>
    
    <item>
      <title>Develop Security Requirements</title>
      <link>https://owaspsamm.org/activity/activity-g-pc-2-a/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-g-pc-2-a/</guid>
      <description>To assist with the ongoing implementation and verification of compliance with policies and standards, develop application security and appropriate test scripts related to each applicable requirement. Organize these documents into libraries and make them available to all application teams in formats most conducive for inclusion into each application. Clearly label the documents and link them to the policies and standards they represent, to assist with the ongoing updates and maintenance. Version policies and standards and include detailed change logs with each iterative update to make ongoing inclusion into different products’ SDLC easier.</description>
    </item>
    
    <item>
      <title>Develop specific security expectations for software suppliers.</title>
      <link>https://owaspsamm.org/activity/activity-d-sr-2-b/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-d-sr-2-b/</guid>
      <description>Increase your confidence in the capability of your suppliers for software security. Discuss concrete responsibilities and expectations from your suppliers and your own organisation and establish a contract with the supplier. The responsibilities can be specific quality requirements or particular tasks, and minimal service can be detailed in a Service Level Agreement (SLA). A quality requirement example is that they will deliver software that is protected against the OWASP Top 10 and in case issues are detected, these will be fixed.</description>
    </item>
    
    <item>
      <title>Evaluate common services and design patterns to establish baseline security postures and processes for adoption.</title>
      <link>https://owaspsamm.org/activity/activity-d-sa-2-a/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-d-sa-2-a/</guid>
      <description>Identify shared infrastructure or services with security functionality. These typically include single-sign-on services, access control or entitlements services, logging and monitoring services or application-level firewalling. Collect and evaluat reusable systems to assemble a list of such resources and categorize them by the security mechanism they fulfill. Consider each resource in terms of why a development or an operations team would want to integrate with it, i.e. the benefits of using the shared resource.</description>
    </item>
    
    <item>
      <title>Identify 3rd-Party Requirements</title>
      <link>https://owaspsamm.org/activity/activity-g-pc-1-b/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-g-pc-1-b/</guid>
      <description>Create a comprehensive list of all compliance requirements, including any triggers that could help determine which applications are in scope. Compliance requirements may be considered in scope based on factors such as geographic location, types of data, or contractual obligations with clients or business partners. Review each identified compliance requirement with the appropriate experts and legal, to ensure the obligation is understood. Since many compliance obligations vary in applicability based on how the data is processed, stored, or transmitted across the computing environment, compliance drivers should always indicate opportunities for lowering the overall compliance burden by changing how the data is handled.</description>
    </item>
    
    <item>
      <title>Identify Organization&#39;s Drivers</title>
      <link>https://owaspsamm.org/activity/activity-g-sm-1-a/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-g-sm-1-a/</guid>
      <description>Understand, based on application risk exposure, what threats exist or may exist, as well as how tolerant executive leadership is of these risks. This understanding is a key component of determining software security assurance priorities. To ascertain these threats, interview business owners and stakeholders and document drivers specific to industries where the organization operates as well as drivers specific to the organization. Gathered information includes worst-case scenarios that could impact the organization, as well as opportunities where an optimized software development life-cycle and more secure applications could provide a market-differentiator or create additional opportunities.</description>
    </item>
    
    <item>
      <title>Identify Security Champions</title>
      <link>https://owaspsamm.org/activity/activity-g-eg-1-b/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-g-eg-1-b/</guid>
      <description>Implement a program where each software development team has a member considered a “Security Champion” who is the liaison between Information Security and developers. Depending on the size and structure of the team the “Security Champion” may be a software developer, tester, or a product manager. The “Security Champion” has a set number of hours per week for Information Security related activities. They participate in periodic briefings to increase awareness and expertise in different security disciplines.</description>
    </item>
    
    <item>
      <title>Identify security-appropriate tools and frameworks as recommended technologies for project teams across the organization.</title>
      <link>https://owaspsamm.org/activity/activity-d-sa-2-b/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-d-sa-2-b/</guid>
      <description>Identify commonly used technologies, frameworks and tools in use across software projects in the organisation, whereby you focus on capturing the high-level technologies. Create a list and share it across the development organization as recommended technologies. When selecting them, consider incident history, track record for responding to vulnerabilities, appropriateness of functionality for the organization, excessive complexity in usage of the third-party component, and sufficient knowledge within the organisation. Senior developers and architects create this list, including input from managers and security auditors.</description>
    </item>
    
    <item>
      <title>Implement Centers of Excellence</title>
      <link>https://owaspsamm.org/activity/activity-g-eg-2-b/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-g-eg-2-b/</guid>
      <description>The organization implements a formal secure coding center of excellence, with architects and senior developers representing the different business units and technology stacks. The team has an official charter and defines standards and best practices to improve software development practices. The goal is to mitigate the way velocity of change in technology, programming languages, and development frameworks and libraries makes it difficult for Information Security professionals to be fully informed of all the technical nuances that impact security.</description>
    </item>
    
    <item>
      <title>Influence Decisions by Metrics</title>
      <link>https://owaspsamm.org/activity/activity-g-sm-3-b/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-g-sm-3-b/</guid>
      <description>Define guidelines for influencing the Application Security program based on the KPIs and other application security metrics. These guidelines combine the maturity of the application development process and procedures with different metrics to make the program more efficient. The following examples show a relationship between measurements and ways of evolving and improving application security * Focus on maturity of the development life-cycle makes the relative cost per defect lower by applying security proactively.</description>
    </item>
    
    <item>
      <title>Inventory and evaluate security quality of technologies, tools and frameworks used by applications.</title>
      <link>https://owaspsamm.org/activity/activity-d-sa-1-b/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-d-sa-1-b/</guid>
      <description>People often take the path of least resistance in developing, deploying or operating a software solution. New technologies are included when they can facilitate or speed up the effort or enable the solution to scale better. These new technologies might, however, introduce new risks to the organisation that you need to manage. Identify the most important technologies, frameworks, tools and integrations being used for each application. Use the solution architect’s knowledge, or study the development and operating environment and artefacts.</description>
    </item>
    
    <item>
      <title>Leverage recurring threat model exercises and automated analysis to ensure risk is effectively managed.</title>
      <link>https://owaspsamm.org/activity/activity-d-ta-3-b/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-d-ta-3-b/</guid>
      <description>In a mature setup of threat modeling, regularly (e.g., yearly) review the existing threat models to verify that no new threats are relevant for your applications. Use automated analysis to evaluate the quality and discover gaps and/or patterns in the threat models. These can improve the threat models. Review the threat categories relevant to your organization. When you identify new threat categories, feed this information to the organization to ensure appropriate handling.</description>
    </item>
    
    <item>
      <title>Measure 3rd-Party Compliance</title>
      <link>https://owaspsamm.org/activity/activity-g-pc-3-b/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-g-pc-3-b/</guid>
      <description>Develop a program for measuring and reporting on the status of compliance between different applications. Application requirements and test scripts help determine the status of compliance. Leverage testing automation to promptly detect compliance regressions in frequently updated applications and ensure compliance is maintained through the different application versions. Whenever fully automated testing is not possible, QA, Internal Audit, or Information Security teams assess compliance periodically through a combination of manual testing and interview.</description>
    </item>
    
    <item>
      <title>Measure Compliance with Policies and Standards</title>
      <link>https://owaspsamm.org/activity/activity-g-pc-3-a/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-g-pc-3-a/</guid>
      <description>Develop a program to measure each application’s compliance with existing policies and standards. Mandatory requirements should be motivated and reported consistently across all teams. Whenever possible, tie compliance status into automated testing and report with each version. Compliance reporting includes the version of policies and standards and appropriate code coverage factors. Encourage non-compliant teams to review available resources such as security requirements and test scripts, to ensure non-compliance is not a result of inadequate guidance.</description>
    </item>
    
    <item>
      <title>Perform basic threat modeling to understand risks in application design.</title>
      <link>https://owaspsamm.org/activity/activity-d-ta-1-b/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-d-ta-1-b/</guid>
      <description>The purpose of Threat Modeling is to pro-actively identify potential issues in the technical design of the application. A careless setup might lead to important attack vectors in an application that can be exploited to target your organization. Experience shows that architectural design can be an important source of security issues, and the consequences can be significant. The practice of threat modeling includes both eliciting and managing threats. Use known good security practices (or the lack thereof) or a more structured approach such as STRIDE to elicit threats.</description>
    </item>
    
    <item>
      <title>Perform vendor assessments to evaluate supplier security.</title>
      <link>https://owaspsamm.org/activity/activity-d-sr-1-b/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-d-sr-1-b/</guid>
      <description>The security competences and habits of the expernal suppliers involved in the development of your software can have a significant impact on the security posture of the final product. Consequently, it is important to know and evaluate your suppliers on this front. Carry out a vendor assessment to understand the strengths and weaknesses of your suppliers. Conduct interviews and review their typical practices and deliveries. This gives you an idea of how they organize themselves and elements to evaluate whether you need to take additional measures to mitigate potential risks.</description>
    </item>
    
    <item>
      <title>Proactively engage with software suppliers on methodology, tools and security objectives.</title>
      <link>https://owaspsamm.org/activity/activity-d-sr-3-b/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-d-sr-3-b/</guid>
      <description>The best way to minimize the risk of issues in software is to align maximally and integrate closely between the different parties. From a process perspective, this means using similar development paradigms and introducing regular milestones to ensure proper alignment and qualitative progress. From a tools perspective, this might mean using similar build, verification and deployment environments, and sharing other supporting tools (e.g. requirements or architecture tools, or code repositories). In case suppliers cannot meet the objectives that you have set, implement compensating controls so that, overall, you meet your objectives.</description>
    </item>
    
    <item>
      <title>Provide security reqiurements framework to project teams</title>
      <link>https://owaspsamm.org/activity/activity-d-sr-3-a/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-d-sr-3-a/</guid>
      <description>Setup a security requirements framework to help projects elicit an appropriate and complete requirements set for their project. This framework considers the different types of requirements and sources of requirements. It should be adapted to the organisational habits and culture, and provide effective methodology and guidance in the elicitation and formation of requirements. The framework helps project teams increase the efficiency and effectiveness of requirements engineering. It can provide a categorisation of common requirements and a number of reusable requirements.</description>
    </item>
    
    <item>
      <title>Publish a Unified Strategy</title>
      <link>https://owaspsamm.org/activity/activity-g-sm-2-a/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-g-sm-2-a/</guid>
      <description>Based on the magnitude of assets, threats, and risk tolerance, develop a security strategic plan and budget to address business priorities around application security. The plan covers 1 to 3 years and includes milestones consistent with the organization’s business drivers and risks. It provides tactical and strategic initiatives and follows a roadmap that makes its alignment with business priorities and needs visible. In the roadmap reach a balance between changes requiring financial expenditures, changes of processes and procedures, and changes impacting the organization’s culture.</description>
    </item>
    
    <item>
      <title>Publish Compliance Requirements</title>
      <link>https://owaspsamm.org/activity/activity-g-pc-2-b/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-g-pc-2-b/</guid>
      <description>Develop a library of application requirements and test scripts to establish and verify regulatory compliance of applications. Some of these are tied to individual compliance requirements like PCI or GDPR, while others are more general in nature and address global compliance requirements such as ISO. The library is available to all application development teams. It includes guidance for determining all applicable requirements including considerations for reducing the compliance burden and scope.</description>
    </item>
    
    <item>
      <title>Quantitiate risk profiles are created for applications across the organization.</title>
      <link>https://owaspsamm.org/activity/activity-d-ta-2-a/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-d-ta-2-a/</guid>
      <description>The goal of this activity is to thoroughly understand the risk level of all applications within the organization, to focus the effort of your software assurance activities where it really matters. From a risk evaluation perspective, the basic set of questions is not enough to thoroughly evaluate the risk of all applications. Create an extensive and standardized way to evaluate the risk of the application, among others via their impact on information security (confidentiality, integrity and availability of data).</description>
    </item>
    
    <item>
      <title>Reference architectures are utilized and continuously evaluated for appropriateness</title>
      <link>https://owaspsamm.org/activity/activity-d-sa-3-a/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-d-sa-3-a/</guid>
      <description>Build a set of reference architectures that select and combine a verified set of security components to ensure a proper design of security. Reference platforms have advantages in terms of shortening audit and security-related reviews, increasing efficiency in development, and lowering maintenance overhead. Continuously maintain and improve the reference architecture based on new insights in the organisation and within the community. Have architects, senior developers and other technical stakeholders participate in design and creation of reference platforms.</description>
    </item>
    
    <item>
      <title>Set Target KPIs</title>
      <link>https://owaspsamm.org/activity/activity-g-sm-2-b/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-g-sm-2-b/</guid>
      <description>Once the organization has defined its application security metrics, collect enough information to establish realistic goals. Test identified metrics to ensure you can gather data consistently and efficiently over a short period. After the initial testing period, the organization should have enough information to commit to goals and objectives expressed through Key Performance Indicators (KPIs). While several measurements are useful for monitoring the information security program and its effectiveness, KPIs are comprised of the most meaningful and effective metrics.</description>
    </item>
    
    <item>
      <title>Software teams continuously evaluate application risk profile and update based upon evolving business decisions.</title>
      <link>https://owaspsamm.org/activity/activity-d-ta-3-a/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-d-ta-3-a/</guid>
      <description>The application portfolio of an organization changes, as well as the conditions and constraints in which an application lives (e.g., driven by the company strategy). Periodically review the risk inventory to ensure correctness of the risk evaluations of the different applications. Have a periodic review at an enterprise-wide level. Also, as your enterprise matures in software assurance, stimulate teams to continuously question which changes in conditions might impact the risk profile.</description>
    </item>
    
    <item>
      <title>Specific security requirements are utilized during product development.</title>
      <link>https://owaspsamm.org/activity/activity-d-sr-2-a/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-d-sr-2-a/</guid>
      <description>Security requirements can originate from other sources including policies and legislation, known problems in the application, and intelligence from metrics and feedback (LINK to DM lvl 3). At this level, a more systematic elicitation of security requirements must be achieved by analysing different sources of such requirements. Ensure that appropriate input is received from these sources to help the elicitation of requirements. For example, organize interviews or brainstorm sessions (e.g., in the case of policy and legislation), analyse historical logs or vulnerability systems.</description>
    </item>
    
    <item>
      <title>Standardize In-House Application Security Guidance</title>
      <link>https://owaspsamm.org/activity/activity-g-eg-3-a/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-g-eg-3-a/</guid>
      <description>Implement a formal training program requiring anyone involved with the software development life-cycle to complete appropriate role and technology-specific training as part of the on-boarding process. Based on the criticality of the application and user’s role, consider restricting access until the on-boarding training has been completed. While the organization may source some modules externally, the program is facilitated and managed in-house and includes content specific to the organization going beyond general security best-practices.</description>
    </item>
    
    <item>
      <title>Threat modeling processes are defined and evaluated periodically for adoption andn effectiveness.</title>
      <link>https://owaspsamm.org/activity/activity-d-ta-2-b/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-d-ta-2-b/</guid>
      <description>Establish a standard approach to perform structured threat modeling to increase the quality and efficiency of threat modeling within your organization, and ensure that the invested effort is useful and well spent. Structured threat modeling takes into account the different actors, assets and flows to identify an extensive list of potential threats to the application. It defines the inputs required to start the activity (e.g., a technical architecture overview and a data flow diagram), the different steps to identify threats, and the formalisms to describe or annotate the threats.</description>
    </item>
    
    <item>
      <title>Training for all developers</title>
      <link>https://owaspsamm.org/activity/activity-g-eg-1-a/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-g-eg-1-a/</guid>
      <description>Conduct security awareness training for all roles currently involved in the management, development, testing, or auditing of the software. The goal is to increase the awareness of application security threats and risks, security best practices, and secure software design principles. Develop training internally or procure it externally. Ideally, deliver training in person so participants can have discussions as a team, but Computer Based Training (CBT) is also an option. Course content should include a range of topics relevant to application security and privacy, while remaining accessible to a non-technical audience.</description>
    </item>
    
    <item>
      <title>Use short checklists of security principles</title>
      <link>https://owaspsamm.org/activity/activity-d-sa-1-a/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-d-sa-1-a/</guid>
      <description>During design, technical staff on the project team use a short checklist of security principles. Typically, security principles include defense in depth, securing the weakest link, use of secure defaults, simplicity in design of security functionality, secure failure, balance of security and usability, running with least privilege, avoidance of security by obscurity, etc. For perimeter interfaces, the design team considers each principle in the context of the overall system and identify features that can be added to bolster security at each such interface.</description>
    </item>
    
    <item>
      <title>Use short checklists of security principles</title>
      <link>https://owaspsamm.org/activity/activity-d-sa-3-b/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/activity/activity-d-sa-3-b/</guid>
      <description>For all proprietary development (in-house or acquired), impose and monitor the use of standardized technology. Depending on your organisation, either implement these restrictions into build or deployment tools, by means of after-the-fact automated analysis of application artefacts (e.g., source code, configuration files or deployment artefacts), or periodically review focusing on the correct use of these frameworks. Verify several factors with project teams. Identify use of non-recommended technologies to determine if there are gaps in recommendations versus the organization’s needs.</description>
    </item>
    
  </channel>
</rss>