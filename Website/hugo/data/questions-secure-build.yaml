- Is your full build process formally described?:
    security_practice: Secure Build
    stream: a
    stream_title: Build Process
    maturity: 1
    quality_criteria:
        - You have enough information to recreate the build processes
        - Your build documentation up to date
        - Your build documentation is stored in an accessible location
        - Produced artifact checksums are created during build to support later verification

    answers:
        - A:
            answer: 'No'
            weight: 0
        - B:
            answer: 'Yes, for some applications'
            weight: 0.25
        - C:
            answer: 'Yes, for at least half of the applications'
            weight: 0.5
        - D:
            answer: 'Yes, for most or all of the applications'
            weight: 1

- Is the build process fully automated?:
    security_practice: Secure Build
    stream: a
    stream_title: Build Process
    maturity: 2
    quality_criteria:
        - The build process itself doesn't require any human interaction
        - Your build tools are hardened as per best practice and vendor guidance
        - You encrypt the secrets required by the build tools and control access based on the principle of least privilege

    answers:
        - A:
            answer: 'No'
            weight: 0
        - B:
            answer: 'Yes, for some applications'
            weight: 0.25
        - C:
            answer: 'Yes, for at least half of the applications'
            weight: 0.5
        - D:
            answer: 'Yes, for most or all of the applications'
            weight: 1

- Are automated security checks enforced in your build processes?:
    security_practice: Secure Build
    stream: a
    stream_title: Build Process
    maturity: 3
    quality_criteria:
        - Build fails if the application doesn't meet predefined security baseline
        - You have a maximum accepted severity for vulnerabilties
        - You log warnings and failures in a centralized system
        - You regularly (at least once a year) select and configure tools to evaluate each application against its security requirements

    answers:
        - A:
            answer: 'No'
            weight: 0
        - B:
            answer: 'Yes, for some applications'
            weight: 0.25
        - C:
            answer: 'Yes, for at least half of the applications'
            weight: 0.5
        - D:
            answer: 'Yes, for most or all of the applications'
            weight: 1

- Do you have solid knowledge about dependencies you're relying on?:
    security_practice: Secure Build
    stream: b
    stream_title: Software Dependencies
    maturity: 1
    answers:
        - A:
            answer: 'No'
            weight: 0
        - B:
            answer: 'Yes, for some applications'
            weight: 0.25
        - C:
            answer: 'Yes, for at least half of the applications'
            weight: 0.5
        - D:
            answer: 'Yes, for most or all of the applications'
            weight: 1

    quality_criteria:
        - You have a current bill of materials (BOM) for every application
        - You can quickly find out which applications are affected by a particular CVE
        - You have provably analyzed and addressed findings from dependencies at least once in the last three months

- Do you handle 3rd party dependency risk by a formal process?:
    security_practice: Secure Build
    stream: b
    stream_title: Software Dependencies
    maturity: 2
    answers:
        - A:
            answer: 'No'
            weight: 0
        - B:
            answer: 'Yes, for some applications'
            weight: 0.25
        - C:
            answer: 'Yes, for at least half of the applications'
            weight: 0.5
        - D:
            answer: 'Yes, for most or all of the applications'
            weight: 1

    quality_criteria:
        - You maintain a list of approved dependencies which meet predefined criteria
        - Dependencies are automatically evaluated for new CVEs and responsible staff is alerted
        - License changes with possible impact on legal application usage are automatically detected and alerted
        - Usage of unmaintained dependencies is tracked and alerted
        - Not needed dependencies are reliably detected and removed from the software

- Do you prevent build of software if it's affected by vulnerabilities in dependencies?:
    security_practice: Secure Build
    stream: b
    stream_title: Software Dependencies
    maturity: 3
    answers:
        - A:
            answer: 'No'
            weight: 0
        - B:
            answer: 'Yes, for some applications'
            weight: 0.25
        - C:
            answer: 'Yes, for at least half of the applications'
            weight: 0.5
        - D:
            answer: 'Yes, for most or all of the applications'
            weight: 1

    quality_criteria:
        - Your build system is connected to a system for tracking 3rd party dependency risk, causing build to fail unless the vulnerability is evaluated to be a false positive or the risk is explicitely accepted.
        - You scan your dependencies using a static analysis tool
        - You report findings back to dependency authors using an established responsible disclosure process
        - Using a new dependency not been evaluated for security risk causes failing the build
