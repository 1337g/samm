<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OWASP SAMM</title><link>https://owaspsamm.org/</link><description>Recent content on OWASP SAMM</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 03 Sep 2019 13:39:46 +0200</lastBuildDate><atom:link href="https://owaspsamm.org/index.xml" rel="self" type="application/rss+xml"/><item><title>V2 Toolkit</title><link>https://owaspsamm.org/blog/2019/09/03/v2-toolkit/</link><pubDate>Tue, 03 Sep 2019 13:39:46 +0200</pubDate><guid>https://owaspsamm.org/blog/2019/09/03/v2-toolkit/</guid><description>Call for feedback on new toolkit As part of our work towards OWASP SAMM V2 we&amp;rsquo;ve updated our toolbox. This beta version contains the list of new questions and quality criteria that make up our measurement model. All feedback is welcome. Try it out and get back to us. We&amp;rsquo;d love to hear your thoughts!</description></item><item><title>Open Security Summit 2019</title><link>https://owaspsamm.org/blog/2019/07/10/open-security-summit-2019/</link><pubDate>Wed, 10 Jul 2019 13:07:31 +0200</pubDate><guid>https://owaspsamm.org/blog/2019/07/10/open-security-summit-2019/</guid><description>SAMM track, an overview and commentary of the event The Open Security Summit 2019 focused on the collaboration between Developers and Application Security and was organised with the support of OWASP. The 5-day sprint on SAMMv2 enabled attendees to work and collaborate intensively towards specific Application Security challenges with a focus on actionable outcomes. In addition to specific Maturity Models sessions, a large number of OWASP SAMM Working Sessions took place at the Summit.</description></item><item><title>Version 2 Beta</title><link>https://owaspsamm.org/blog/2019/02/02/version2-beta/</link><pubDate>Sat, 02 Feb 2019 21:49:20 +0200</pubDate><guid>https://owaspsamm.org/blog/2019/02/02/version2-beta/</guid><description>The original model (v1.0) was written by Pravir Chandra and dates back from 2009. Over the last 10 years, it has proven a widely distributed and effective model for improving secure software practices in different types of organisations throughout the world. Translations and supporting tools have been contributed by the community to facilitate adoption and alignment. With version 2.0, we further improve the model to deal with some of its current limitations.</description></item><item><title>Generic blog post</title><link>https://owaspsamm.org/blog/2018/09/17/generic-blog-post/</link><pubDate>Mon, 17 Sep 2018 13:47:08 +0200</pubDate><guid>https://owaspsamm.org/blog/2018/09/17/generic-blog-post/</guid><description>Add at least one more blog post to start with a reasonable number of articles.
If one examines substructural depatriarchialism, one is faced with a choice: either accept Lacanist obscurity or conclude that expression is a product of communication. The example of Lyotardist narrative which is a central theme of Fellini’s Satyricon emerges again in 8 1&amp;frasl;2. However, the primary theme of Finnis’s[1] essay on Lacanist obscurity is a mythopoetical totality.</description></item><item><title/><link>https://owaspsamm.org/practice/practice-d-security-architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/practice/practice-d-security-architecture/</guid><description>This practice focuses on the security linked to components and technology you deal with during the design of the architecture of your software. Secure Architecture Design looks at the selection and composition of components that form the foundation of your solution, focusing on its security properties. Technology management looks at the security of supporting technologies used during development, deployment and operations, such as development stacks and tooling, deployment tooling, and operating systems and tooling.</description></item><item><title/><link>https://owaspsamm.org/practice/practice-d-security-requirements/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/practice/practice-d-security-requirements/</guid><description>This practice focuses on security requirements that are important in the context of secure software. A first type deals with typical software-related requirements, to specify objectives and expectations to protect the service and data at the core of the application. A second type deals with requirements that are relative to supplier organisations that are part of the development context of the application, in particular for outsourced development. It is important to streamline the expectations in terms of secure development because outsourced development can have significant impact on the security of the application.</description></item><item><title/><link>https://owaspsamm.org/practice/practice-d-threat-assessment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/practice/practice-d-threat-assessment/</guid><description>The Threat Assessment (TA) practice focuses on accurately identifying and understanding potential attacks upon an organization’s software to better understand the risks and facilitate risk management. Indeed, software assurance is all about identifying risks in applications and treating them accordingly. Risks to an application can be relative to the business of the application (think about business logic attacks) or to the technical setup of the application. The Application Risk Profile stream deals with the former, while the Threat Modeling focuses on the latter.</description></item><item><title/><link>https://owaspsamm.org/practice/practice-g-education-guidance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/practice/practice-g-education-guidance/</guid><description>The Education &amp;amp; Guidance (EG) Practice focuses on arming personnel involved in the software life-cycle with knowledge and resources to design, develop, and deploy secure software. With improved access to information, project teams can proactively identify and mitigate the specific security risks that apply to their organization. One major theme for improvement across the Objectives is providing training for employees and increasing their security awareness, either through instructor-led sessions or computer-based modules.</description></item><item><title/><link>https://owaspsamm.org/practice/practice-g-policy-compliance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/practice/practice-g-policy-compliance/</guid><description>The Policy &amp;amp; Compliance (PC) Practice focuses on understanding and meeting external legal and regulatory requirements while driving internal security standards to ensure compliance in a way that’s aligned with the business purpose of the organization. A driving theme for improvement within this Practice is describing organization’s standards and 3rd party obligations as application requirements, enabling efficient and automated audits that may be leveraged within the SDLC and continuously demonstrate that all expectations are met.</description></item><item><title/><link>https://owaspsamm.org/practice/practice-g-strategy-metrics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/practice/practice-g-strategy-metrics/</guid><description>Software assurance entails many different activities and concerns. Without an overall plan, you might be spending a lot of effort to build in security, while in fact your efforts may be unaligned, disproportional or even counter-productive. The goal of this security practice is to build an efficient and effective plan for realizing your software security objectives within your organization. A software security program, that selects and prioritizes activities of the rest of the model, serves as the foundation for your efforts.</description></item><item><title/><link>https://owaspsamm.org/quick-start-guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/quick-start-guide/</guid><description>OWASP SAMM v2.0 - Quick Start Guide TODO: include the OWASP SAMM LOGO
Creative Commons (CC) Attribution Free Version at: https://www.owasp.org
Project leaders: Sebastien Deleersnyder &amp;amp; Bart De Win
About OWASP SAMM OWASP SAMM (Software Assurance Maturity Model) is the OWASP framework to help organizations assess, formulate, and implement a strategy for software security, that can be integrated into their existing Software Development Lifecycle ( SDLC). OWASP SAMM is fit for most contexts?</description></item><item><title>About us</title><link>https://owaspsamm.org/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/about/</guid><description>What is OWASP SAMM? SAMM stands for Software Assurance Security Model.
Our mission is to provide an effective and measurable way for all types of organizations to analyze and improve their software security posture. We want to raise awareness and educate organizations on how to design, develop, and deploy secure software through our self-assessment model. SAMM supports the complete software lifecycle and is technology and process agnostic. We built SAMM to be evolutive and risk-driven in nature, as there is no single recipe that works for all organizations.</description></item><item><title>Acronyms and Abbreviations</title><link>https://owaspsamm.org/acronyms-and-abbreviations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/acronyms-and-abbreviations/</guid><description> AA Architecture Assessment (SAMM Practice) ADFS Active Directory Federation Services ASVS OWASP Application Security Verification Standard AV Anti-Virus BOM Bill of Materials CBT Computer-Based Training CPE Common Platform Enumeration CVE Common Vulnerabilities and Exposures CVSS Common Vulnerability Scoring System CWE Common Weakness Enumeration DAST Dynamic Application Security Testing DDoS Distributed Denial of Service DevOps Integrated Development and Operations/dd DevSecOps Integrated Development, Security, and Operations/dd DM Defect Management (SAMM Practice) DOD Definition of Done DOR Definition of Ready DoS Denial of Service DSL Domain-Specific Language EM Environment Management (SAMM Practice) EG Education and Guidance (SAMM Practice) ESB Enterprise Service Bus GDPR General Data Protection Regulation (European Union law) HSM Hardware Security Module IAM Identity and Access Management IAST Interactive Application Security Testing IDE Integrated Development Environment IM Incident Management (SAMM Practice) IP Internet Protocol ISO International Standards Organization KPI Key Performance Indicator LDAP Lightweight Directory Access Protocol LMS Learning Management System NIST National Institute of Standards and Technology (US Agency) NVD National Vulnerability Database (US) OM Operational Management (SAMM Practice) OS Operating System OWASP Open Web Application Security Project PC Policy and Compliance (SAMM Practice) PCI Payment Card Industry PCI DSS Payment Card Industry Data Security Standard QA Quality Assurance RASP Runtime Application Self-Protection RCA Root Cause Analysis RT Requirements-driven Testing (SAMM Practice) REST REpresentational State Transfer SA Security Architecture (SAMM Practice) SAMM Software Assurance Maturity Model SAST Static Application Security Testing SB Secure Build (SAMM Practice) SD Secure Deployment (SAMM Practice) SDK Software Development Kit SDLC Software Development Life Cycle SIEM Security Information and Event Management SIP Session Initiation Protocol SLA Service Level Agreement SM Strategy and Metrics (SAMM Practice) SMART Specific, Measurable, Actionable, Relevant, and Time-bound SME Subject Matter Expert SOAP Simple Object Access Protocol SP Special Publication (NIST Document) SR Security Requirements (SAMM Practice) SSCE Secure Software Center of Excellence SSO Single Sign-On ST Security Testing (SAMM Practice) STRIDE Spoofing, Tampering, Repudiation, Information disclosure, Denial of service, and Elevation of privilege SWIFT Society for Worldwide Interbank Financial Telecommunication TA Threat Assessment (SAMM Practice) TLS Transport Layer Security TPM Trusted Platform Module UAT User Acceptance Test VA Vulnerability Analysis VCS Version Control System WAF Web Application Firewall ZAP OWASP Zed Attack Proxy</description></item><item><title>Align Security Program with Business</title><link>https://owaspsamm.org/activity/activity-g-sm-3-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-g-sm-3-a/</guid><description>You review the application security plan periodically for ongoing applicability and support of the organization’s evolving needs and future growth. To do this, you repeat the steps from the first two maturity levels of this Security Practice at least annually. The goal is for the plan to always support the current and future needs of the organization, which ensures the program is aligned with the business. In addition to reviewing the business drivers, the organization closely monitors the success of the implementation of each of the roadmap milestones.</description></item><item><title>Application risk assessments are performed to determine the risk profile.</title><link>https://owaspsamm.org/activity/activity-d-ta-1-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-d-ta-1-a/</guid><description>As an organization, you want to spend your security budget where it matters. Application risk is a good tool to guide your security spending. A risk classification helps identify which applications can pose a serious threat to the organization if they were attacked or breached. Use a simple method to evaluate the application risk per application, estimating the potential business impact that it poses for the organization in case of an attack.</description></item><item><title>Application Risk Profile</title><link>https://owaspsamm.org/model/design/threat-assessment/stream-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/design/threat-assessment/stream-a/</guid><description/></item><item><title>Apply context-specific security requirements to the application</title><link>https://owaspsamm.org/activity/activity-d-sr-1-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-d-sr-1-a/</guid><description>Perform a review of the functional requirements of the software project. Identify relevant security requirements (i.e. expectations) for this functionality by reasoning on the desired confidentiality, integrity or availability of the service or data offered by the software project. Requirements state the objective (e.g., “personal data for the registration process should be transferred and stored securely”), but not the actual measure to achieve the objective (e.g., “use TLSv1.2 for secure transfer”).</description></item><item><title>Architecture Assessment</title><link>https://owaspsamm.org/model/verification/architecture-assessment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/verification/architecture-assessment/</guid><description>Validate the security of the software and supporting infrastructure architecture. Identify application and infrastructure architecture components. For each interface note any security-related functionality and check the model for design-level consistency for how interfaces with similar access are secured. Iterate through the list of security mechanisms and analyze the system for their provision.
Validate the software and supporting infrastructure architecture against known security requirements, compliance goals and best practices. The overall goal is to verify that the system design has addressed each requirement and best practice.</description></item><item><title>Architecture Compliance</title><link>https://owaspsamm.org/model/verification/architecture-assessment/stream-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/verification/architecture-assessment/stream-b/</guid><description/></item><item><title>Architecture Design</title><link>https://owaspsamm.org/model/design/security-architecture/stream-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/design/security-architecture/stream-a/</guid><description/></item><item><title>Architecture Validation</title><link>https://owaspsamm.org/model/verification/architecture-assessment/stream-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/verification/architecture-assessment/stream-a/</guid><description/></item><item><title>Benchmarking</title><link>https://owaspsamm.org/benchmarking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/benchmarking/</guid><description>SAMM Benchmarking Goals OWASP SAMM (Software Assurance Maturity Model) Benchmarking is a sub-project within OWASP SAMM to facilitate information and data collaboration between organizations with the goal to help answer the critical questions &amp;ldquo;How am I doing?&amp;rdquo; and &amp;ldquo;What might be working for other similar organizations&amp;rdquo;.
The goal of this project is to collect the most comprehensive dataset related to organizational maturity of application or software security programs. Allowing OWASP SAMM to enable comparative analysis for the SAMM practioners and other future research as well.</description></item><item><title>Build Process</title><link>https://owaspsamm.org/model/implementation/secure-build/stream-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/implementation/secure-build/stream-a/</guid><description/></item><item><title>Compliance Management</title><link>https://owaspsamm.org/model/governance/policy-and-compliance/stream-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/governance/policy-and-compliance/stream-b/</guid><description/></item><item><title>Configuration Hardening</title><link>https://owaspsamm.org/model/operations/environment-management/stream-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/operations/environment-management/stream-a/</guid><description/></item><item><title>Contact</title><link>https://owaspsamm.org/contact/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/contact/</guid><description>We are here to help you Are you curious about something? Do you want to join as a sponsor? Or maybe host a SAMM training? Please feel free to contact us.</description></item><item><title>Control Verification</title><link>https://owaspsamm.org/model/verification/requirements-testing/stream-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/verification/requirements-testing/stream-a/</guid><description/></item><item><title>Create and Promote</title><link>https://owaspsamm.org/model/governance/strategy-and-metrics/stream-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/governance/strategy-and-metrics/stream-a/</guid><description/></item><item><title>Customize training for developer roles</title><link>https://owaspsamm.org/activity/activity-g-eg-2-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-g-eg-2-a/</guid><description>Conduct instructor-led or CBT security training specific to the organization’s roles and technologies, starting with the core development team. The organization customizes training for product managers, software developers, testers, and security auditors, based on each group’s technical needs. - Product managers train on topics related to SAMM business functions and security practices, with emphasis on security requirements, threat modeling, and defect tracking. - Developers train on coding standards and best practices for the technologies they work with to ensure the training directly benefits application security.</description></item><item><title>Data Protection</title><link>https://owaspsamm.org/model/operations/operational-management/stream-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/operations/operational-management/stream-a/</guid><description/></item><item><title>Deep Understanding</title><link>https://owaspsamm.org/model/verification/security-testing/stream-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/verification/security-testing/stream-b/</guid><description/></item><item><title>Defect Management</title><link>https://owaspsamm.org/model/implementation/defect-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/implementation/defect-management/</guid><description>The Defect Management practice focuses on collecting, recording, and analysing software security defects and enriching them with information to drive metrics-based decisions. The practice’s first stream deals with the process of handling and managing defects to ensure released software has a given assurance level. The second stream focuses on enriching the information about the defects and deriving metrics to guide decisions about the security of individual projects and of the security assurance program as a whole.</description></item><item><title>Defect Tracking (Flaws/Bugs/Process)</title><link>https://owaspsamm.org/model/implementation/defect-management/stream-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/implementation/defect-management/stream-a/</guid><description/></item><item><title>Define Security Metrics</title><link>https://owaspsamm.org/activity/activity-g-sm-1-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-g-sm-1-b/</guid><description>Define and document metrics to evaluate the effectiveness and efficiency of the application security program. This way improvements are measurable and you can use them to secure future support and funding for the program. Considering the dynamic nature of most development environments, metrics should be comprised of measurements in the following categories * Effort metrics measure the effort spent on security. For example training hours, time spent performing code reviews, and number of applications scanned for vulnerabilities.</description></item><item><title>Define security policies and standards</title><link>https://owaspsamm.org/activity/activity-g-pc-1-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-g-pc-1-a/</guid><description>Develop a library of policies and standards to govern all aspects of software development in the organization. Policies and standards are based on existing industry standards and appropriate for the organization’s industry. Due to the full range of technology-specific limitations and best practices, review proposed standards with the various product teams. With the overarching objective of increasing security of the applications and computing infrastructure, invite product teams to offer feedback on any aspects of the standards that would not be feasible or cost-effective to implement, as well as opportunities for standards to go further with little effort on the product teams.</description></item><item><title>Deployment Process</title><link>https://owaspsamm.org/model/implementation/secure-deployment/stream-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/implementation/secure-deployment/stream-a/</guid><description/></item><item><title>Design</title><link>https://owaspsamm.org/model/design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/design/</guid><description>Description of the business function.</description></item><item><title>Develop an In-House Application Security Community</title><link>https://owaspsamm.org/activity/activity-g-eg-3-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-g-eg-3-b/</guid><description>Security is the responsibility of all employees, not just the Information Security team. Deploy communication and knowledge sharing platforms to help developers build communities around different technologies, tools, and programming languages. In these communities employees share information, discuss challenges with other developers, and search the knowledge base for answers to previously discussed issues. Form communities around roles and responsibilities and enable developers and engineers from different teams and business units to communicate freely and benefit from each other’s expertise.</description></item><item><title>Develop Security Requirements</title><link>https://owaspsamm.org/activity/activity-g-pc-2-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-g-pc-2-a/</guid><description>To assist with the ongoing implementation and verification of compliance with policies and standards, develop application security and appropriate test scripts related to each applicable requirement. Organize these documents into libraries and make them available to all application teams in formats most conducive for inclusion into each application. Clearly label the documents and link them to the policies and standards they represent, to assist with the ongoing updates and maintenance. Version policies and standards and include detailed change logs with each iterative update to make ongoing inclusion into different products’ SDLC easier.</description></item><item><title>Develop specific security expectations for software suppliers.</title><link>https://owaspsamm.org/activity/activity-d-sr-2-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-d-sr-2-b/</guid><description>Increase your confidence in the capability of your suppliers for software security. Discuss concrete responsibilities and expectations from your suppliers and your own organisation and establish a contract with the supplier. The responsibilities can be specific quality requirements or particular tasks, and minimal service can be detailed in a Service Level Agreement (SLA). A quality requirement example is that they will deliver software that is protected against the OWASP Top 10 and in case issues are detected, these will be fixed.</description></item><item><title>Education &amp; Guidance</title><link>https://owaspsamm.org/model/governance/education-and-guidance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/governance/education-and-guidance/</guid><description>The Education &amp;amp; Guidance (EG) practice focuses on arming personnel involved in the software life-cycle with knowledge and resources to design, develop, and deploy secure software. With improved access to information, project teams can proactively identify and mitigate the specific security risks that apply to their organization.
One major theme for improvement across the Objectives is providing training for employees and increasing their security awareness, either through instructor-led sessions or computer-based modules.</description></item><item><title>Environment Management</title><link>https://owaspsamm.org/model/operations/environment-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/operations/environment-management/</guid><description>The organization&amp;rsquo;s work on application security doesn&amp;rsquo;t end once the application becomes operational. New security features and patches are regularly released for the various elements of the technology stack you&amp;rsquo;re using, until they become obsolete or are no longer supported.
Most of the technologies in any application stack are not secure by default. This is frequently intentional, to enhance backwards compatibility or ease of setup. For this reason, ensuring the secure operation of the organization&amp;rsquo;s technology stack requires the consistent application of secure baseline configurations to all components.</description></item><item><title>Evaluate common services and design patterns to establish baseline security postures and processes for adoption.</title><link>https://owaspsamm.org/activity/activity-d-sa-2-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-d-sa-2-a/</guid><description>Identify shared infrastructure or services with security functionality. These typically include single-sign-on services, access control or entitlements services, logging and monitoring services or application-level firewalling. Collect and evaluat reusable systems to assemble a list of such resources and categorize them by the security mechanism they fulfill. Consider each resource in terms of why a development or an operations team would want to integrate with it, i.e. the benefits of using the shared resource.</description></item><item><title>Events and trainings</title><link>https://owaspsamm.org/events/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/events/</guid><description>We have a number of events coming up where we have the pleasure of presenting SAMM v2. See the list below or contact us directly if you need more information.
As an open source project, we highly value the feedback from our community, either from meeting you at an event or through the different channels we provide for you to contribute your feedback.
OWASP SAMM on tour January 16, 2020</description></item><item><title>FAQ</title><link>https://owaspsamm.org/faq/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/faq/</guid><description>Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo.
Do I need a 1 out of 1 rating for maturity level 1 before working on level 2? It is not strictly required to get a 1 out 1 rating on maturity level 1 to start working on maturity level 2.</description></item><item><title>Governance</title><link>https://owaspsamm.org/model/governance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/governance/</guid><description>Governance is very important.</description></item><item><title>Identify 3rd-Party Requirements</title><link>https://owaspsamm.org/activity/activity-g-pc-1-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-g-pc-1-b/</guid><description>Create a comprehensive list of all compliance requirements, including any triggers that could help determine which applications are in scope. Compliance requirements may be considered in scope based on factors such as geographic location, types of data, or contractual obligations with clients or business partners. Review each identified compliance requirement with the appropriate experts and legal, to ensure the obligation is understood. Since many compliance obligations vary in applicability based on how the data is processed, stored, or transmitted across the computing environment, compliance drivers should always indicate opportunities for lowering the overall compliance burden by changing how the data is handled.</description></item><item><title>Identify Organization&#39;s Drivers</title><link>https://owaspsamm.org/activity/activity-g-sm-1-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-g-sm-1-a/</guid><description>Understand, based on application risk exposure, what threats exist or may exist, as well as how tolerant executive leadership is of these risks. This understanding is a key component of determining software security assurance priorities. To ascertain these threats, interview business owners and stakeholders and document drivers specific to industries where the organization operates as well as drivers specific to the organization. Gathered information includes worst-case scenarios that could impact the organization, as well as opportunities where an optimized software development life-cycle and more secure applications could provide a market-differentiator or create additional opportunities.</description></item><item><title>Identify Security Champions</title><link>https://owaspsamm.org/activity/activity-g-eg-1-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-g-eg-1-b/</guid><description>Implement a program where each software development team has a member considered a “Security Champion” who is the liaison between Information Security and developers. Depending on the size and structure of the team the “Security Champion” may be a software developer, tester, or a product manager. The “Security Champion” has a set number of hours per week for Information Security related activities. They participate in periodic briefings to increase awareness and expertise in different security disciplines.</description></item><item><title>Identify security-appropriate tools and frameworks as recommended technologies for project teams across the organization.</title><link>https://owaspsamm.org/activity/activity-d-sa-2-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-d-sa-2-b/</guid><description>Identify commonly used technologies, frameworks and tools in use across software projects in the organisation, whereby you focus on capturing the high-level technologies. Create a list and share it across the development organization as recommended technologies. When selecting them, consider incident history, track record for responding to vulnerabilities, appropriateness of functionality for the organization, excessive complexity in usage of the third-party component, and sufficient knowledge within the organisation. Senior developers and architects create this list, including input from managers and security auditors.</description></item><item><title>Implement Centers of Excellence</title><link>https://owaspsamm.org/activity/activity-g-eg-2-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-g-eg-2-b/</guid><description>The organization implements a formal secure coding center of excellence, with architects and senior developers representing the different business units and technology stacks. The team has an official charter and defines standards and best practices to improve software development practices. The goal is to mitigate the way velocity of change in technology, programming languages, and development frameworks and libraries makes it difficult for Information Security professionals to be fully informed of all the technical nuances that impact security.</description></item><item><title>Implementation</title><link>https://owaspsamm.org/model/implementation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/implementation/</guid><description>Activities within the Implementation function have the most impact on the daily life of developers. The joint goal is to ship reliably working software with minimum defects.</description></item><item><title>Incident Detection</title><link>https://owaspsamm.org/model/operations/incident-management/stream-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/operations/incident-management/stream-a/</guid><description/></item><item><title>Incident Management</title><link>https://owaspsamm.org/model/operations/incident-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/operations/incident-management/</guid><description>Once your organization has applications in operation, you&amp;rsquo;re likely to face security incidents. In this model, we define a security incident as a breach, or the threat of an imminent breach, of at least one asset&amp;rsquo;s security goals, whether due to malicious or negligent behavior. Examples of security incidents might include: - a successful Denial of Service (DoS) attack against a cloud application; - an application user accessing private data of another, by abusing a security vulnerability; or - an attacker modifying application source code.</description></item><item><title>Incident Response</title><link>https://owaspsamm.org/model/operations/incident-management/stream-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/operations/incident-management/stream-b/</guid><description/></item><item><title>Influence Decisions by Metrics</title><link>https://owaspsamm.org/activity/activity-g-sm-3-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-g-sm-3-b/</guid><description>Define guidelines for influencing the Application Security program based on the KPIs and other application security metrics. These guidelines combine the maturity of the application development process and procedures with different metrics to make the program more efficient. The following examples show a relationship between measurements and ways of evolving and improving application security * Focus on maturity of the development life-cycle makes the relative cost per defect lower by applying security proactively.</description></item><item><title>Inventory and evaluate security quality of technologies, tools and frameworks used by applications.</title><link>https://owaspsamm.org/activity/activity-d-sa-1-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-d-sa-1-b/</guid><description>People often take the path of least resistance in developing, deploying or operating a software solution. New technologies are included when they can facilitate or speed up the effort or enable the solution to scale better. These new technologies might, however, introduce new risks to the organisation that you need to manage. Identify the most important technologies, frameworks, tools and integrations being used for each application. Use the solution architect’s knowledge, or study the development and operating environment and artefacts.</description></item><item><title>Leverage recurring threat model exercises and automated analysis to ensure risk is effectively managed.</title><link>https://owaspsamm.org/activity/activity-d-ta-3-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-d-ta-3-b/</guid><description>In a mature setup of threat modeling, regularly (e.g., yearly) review the existing threat models to verify that no new threats are relevant for your applications. Use automated analysis to evaluate the quality and discover gaps and/or patterns in the threat models. These can improve the threat models. Review the threat categories relevant to your organization. When you identify new threat categories, feed this information to the organization to ensure appropriate handling.</description></item><item><title>Mapping SAMM 1.5 to 2.0</title><link>https://owaspsamm.org/mapping-versions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/mapping-versions/</guid><description>Overview For those organizations using 1.0 or 1.5 versions of SAMM it&amp;rsquo;s important to take the time to understand how the framework has evolved. Organizations that implemented security initiatives and are looking for SAMM scores to validate effectiveness will need to take these changes into consideration since in most cases expectations for maturity level 3 have been significantly increased in favor of automation and better alignment with development teams.</description></item><item><title>Measure 3rd-Party Compliance</title><link>https://owaspsamm.org/activity/activity-g-pc-3-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-g-pc-3-b/</guid><description>Develop a program for measuring and reporting on the status of compliance between different applications. Application requirements and test scripts help determine the status of compliance. Leverage testing automation to promptly detect compliance regressions in frequently updated applications and ensure compliance is maintained through the different application versions. Whenever fully automated testing is not possible, QA, Internal Audit, or Information Security teams assess compliance periodically through a combination of manual testing and interview.</description></item><item><title>Measure and Improve</title><link>https://owaspsamm.org/model/governance/strategy-metrics/stream-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/governance/strategy-metrics/stream-b/</guid><description/></item><item><title>Measure Compliance with Policies and Standards</title><link>https://owaspsamm.org/activity/activity-g-pc-3-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-g-pc-3-a/</guid><description>Develop a program to measure each application’s compliance with existing policies and standards. Mandatory requirements should be motivated and reported consistently across all teams. Whenever possible, tie compliance status into automated testing and report with each version. Compliance reporting includes the version of policies and standards and appropriate code coverage factors. Encourage non-compliant teams to review available resources such as security requirements and test scripts, to ensure non-compliance is not a result of inadequate guidance.</description></item><item><title>Metrics and Feedback/Learning</title><link>https://owaspsamm.org/model/implementation/defect-management/stream-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/implementation/defect-management/stream-b/</guid><description/></item><item><title>Misuse/Abuse Testing</title><link>https://owaspsamm.org/model/verification/requirements-testing/stream-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/verification/requirements-testing/stream-b/</guid><description/></item><item><title>Operational Management</title><link>https://owaspsamm.org/model/operations/operational-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/operations/operational-management/</guid><description>The Operational Management practice focuses on activities to ensure security is maintained throughout operational support functions. Although these functions are not performed directly by an application, the overall security of the application and its data depends on their proper performance. Deploying an application on an unsupported operating system with unpatched vulnerabilities, or failing to store backup media securely, can make the protections built into that application irrelevant.
The functions covered by this practice include, but are not limited to: system provisioning, administration, and decommissioning; database provisioning and administration; and data backup, restore, and archival.</description></item><item><title>Operations</title><link>https://owaspsamm.org/model/operations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/operations/</guid><description>The Operations Business Function encompasses those Activities necessary to ensure confidentiality, integrity, and availability are maintained throughout the operational lifetime of an application and its associated data. Given their focus on security of the application in operation, many of the Activities in this Business Function are outside the typical scope of responsibilities for a software developer. However, these Activities and considerations are essential to keeping software secure, and must be addressed when assessing organizational maturity.</description></item><item><title>Organization and Culture</title><link>https://owaspsamm.org/model/governance/education-and-guidance/stream-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/governance/education-and-guidance/stream-b/</guid><description/></item><item><title>Patching and Updating</title><link>https://owaspsamm.org/model/operations/environment-management/stream-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/operations/environment-management/stream-b/</guid><description/></item><item><title>Perform basic threat modeling to understand risks in application design.</title><link>https://owaspsamm.org/activity/activity-d-ta-1-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-d-ta-1-b/</guid><description>The purpose of Threat Modeling is to pro-actively identify potential issues in the technical design of the application. A careless setup might lead to important attack vectors in an application that can be exploited to target your organization. Experience shows that architectural design can be an important source of security issues, and the consequences can be significant. The practice of threat modeling includes both eliciting and managing threats. Use known good security practices (or the lack thereof) or a more structured approach such as STRIDE to elicit threats.</description></item><item><title>Perform vendor assessments to evaluate supplier security.</title><link>https://owaspsamm.org/activity/activity-d-sr-1-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-d-sr-1-b/</guid><description>The security competences and habits of the expernal suppliers involved in the development of your software can have a significant impact on the security posture of the final product. Consequently, it is important to know and evaluate your suppliers on this front. Carry out a vendor assessment to understand the strengths and weaknesses of your suppliers. Conduct interviews and review their typical practices and deliveries. This gives you an idea of how they organize themselves and elements to evaluate whether you need to take additional measures to mitigate potential risks.</description></item><item><title>Policy &amp; Compliance</title><link>https://owaspsamm.org/model/governance/policy-and-compliance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/governance/policy-and-compliance/</guid><description>The Policy &amp;amp; Compliance (PC) practice focuses on understanding and meeting external legal and regulatory requirements while driving internal security standards to ensure compliance in a way that’s aligned with the business purpose of the organization.
A driving theme for improvement within this practice is describing organization’s standards and 3rd party obligations as application requirements, enabling efficient and automated audits that may be leveraged within the SDLC and continuously demonstrate that all expectations are met.</description></item><item><title>Policy &amp; Standards</title><link>https://owaspsamm.org/model/governance/policy-and-compliance/stream-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/governance/policy-and-compliance/stream-a/</guid><description/></item><item><title>Proactively engage with software suppliers on methodology, tools and security objectives.</title><link>https://owaspsamm.org/activity/activity-d-sr-3-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-d-sr-3-b/</guid><description>The best way to minimize the risk of issues in software is to align maximally and integrate closely between the different parties. From a process perspective, this means using similar development paradigms and introducing regular milestones to ensure proper alignment and qualitative progress. From a tools perspective, this might mean using similar build, verification and deployment environments, and sharing other supporting tools (e.g. requirements or architecture tools, or code repositories). In case suppliers cannot meet the objectives that you have set, implement compensating controls so that, overall, you meet your objectives.</description></item><item><title>Provide security reqiurements framework to project teams</title><link>https://owaspsamm.org/activity/activity-d-sr-3-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-d-sr-3-a/</guid><description>Setup a security requirements framework to help projects elicit an appropriate and complete requirements set for their project. This framework considers the different types of requirements and sources of requirements. It should be adapted to the organisational habits and culture, and provide effective methodology and guidance in the elicitation and formation of requirements. The framework helps project teams increase the efficiency and effectiveness of requirements engineering. It can provide a categorisation of common requirements and a number of reusable requirements.</description></item><item><title>Publish a Unified Strategy</title><link>https://owaspsamm.org/activity/activity-g-sm-2-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-g-sm-2-a/</guid><description>Based on the magnitude of assets, threats, and risk tolerance, develop a security strategic plan and budget to address business priorities around application security. The plan covers 1 to 3 years and includes milestones consistent with the organization’s business drivers and risks. It provides tactical and strategic initiatives and follows a roadmap that makes its alignment with business priorities and needs visible. In the roadmap reach a balance between changes requiring financial expenditures, changes of processes and procedures, and changes impacting the organization’s culture.</description></item><item><title>Publish Compliance Requirements</title><link>https://owaspsamm.org/activity/activity-g-pc-2-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-g-pc-2-b/</guid><description>Develop a library of application requirements and test scripts to establish and verify regulatory compliance of applications. Some of these are tied to individual compliance requirements like PCI or GDPR, while others are more general in nature and address global compliance requirements such as ISO. The library is available to all application development teams. It includes guidance for determining all applicable requirements including considerations for reducing the compliance burden and scope.</description></item><item><title>Quantitiate risk profiles are created for applications across the organization.</title><link>https://owaspsamm.org/activity/activity-d-ta-2-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-d-ta-2-a/</guid><description>The goal of this activity is to thoroughly understand the risk level of all applications within the organization, to focus the effort of your software assurance activities where it really matters. From a risk evaluation perspective, the basic set of questions is not enough to thoroughly evaluate the risk of all applications. Create an extensive and standardized way to evaluate the risk of the application, among others via their impact on information security (confidentiality, integrity and availability of data).</description></item><item><title>Reference architectures are utilized and continuously evaluated for appropriateness</title><link>https://owaspsamm.org/activity/activity-d-sa-3-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-d-sa-3-a/</guid><description>Build a set of reference architectures that select and combine a verified set of security components to ensure a proper design of security. Reference platforms have advantages in terms of shortening audit and security-related reviews, increasing efficiency in development, and lowering maintenance overhead. Continuously maintain and improve the reference architecture based on new insights in the organisation and within the community. Have architects, senior developers and other technical stakeholders participate in design and creation of reference platforms.</description></item><item><title>Requirements Testing</title><link>https://owaspsamm.org/model/verification/requirements-testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/verification/requirements-testing/</guid><description>Conduct positive and negative security tests to verify that the software operates as expected. At a minimum, this means both testing the correct functioning of the standard software security controls, and fuzzing for vulnerabilities against the main input parameters of the application.
From the known security requirements, identify and implement a set of security test cases to check the software for correct functionality. Use abuse-case models for an application to identify concrete security tests that directly or indirectly exploit the abuse scenarios.</description></item><item><title>SAMM Assessment</title><link>https://owaspsamm.org/assessment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/assessment/</guid><description>SAMM Assessment The SAMM v2 assessment Toolbox has been improved to measure the quality of you own software assurance maturity performance. Our Toolbox allows you to review your security activities against the defined quality criteria and calculate your maturity score.
Self-assessment Your first step towards improvement, is to measure where you are now.
Make sure you first read our getting started guide, then you can start with assessing your current software assurance posture.</description></item><item><title>Scalable Baseline</title><link>https://owaspsamm.org/model/verification/security-testing/stream-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/verification/security-testing/stream-a/</guid><description/></item><item><title>Secret Management</title><link>https://owaspsamm.org/model/implementation/secure-deployment/stream-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/implementation/secure-deployment/stream-b/</guid><description/></item><item><title>Secure Build</title><link>https://owaspsamm.org/model/implementation/secure-build/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/implementation/secure-build/</guid><description>The Secure Build practice emphasises the importance of building software in a standardised, repeatable manner, and of doing so using secure components, including 3rd party software dependencies. The first stream focuses on removing any subjectivity from the build process by striving for full automation. An automated build pipeline can include additional automated security checks such as SAST and DAST to gain further assurance and flag security regressions early by failing the build for example.</description></item><item><title>Secure Deployment</title><link>https://owaspsamm.org/model/implementation/secure-deployment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/implementation/secure-deployment/</guid><description>One of the final stages in delivering secure software is ensuring the security and integrity of developed applications are not compromised during their deployment. To this end, the practice’s first stream focuses on removing manual error by automating the deployment process as much as possible, and making its success contingent upon the outcomes of integrated security verification checks. It also fosters Separation of Duties by making adequately trained, non-developers responsible for deployment.</description></item><item><title>Security Architecture</title><link>https://owaspsamm.org/model/design/security-architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/design/security-architecture/</guid><description>This practice focuses on the security linked to components and technology you deal with during the design of the architecture of your software. Secure Architecture Design looks at the selection and composition of components that form the foundation of your solution, focusing on its security properties. Technology management looks at the security of supporting technologies used during development, deployment and operations, such as development stacks and tooling, deployment tooling, and operating systems and tooling.</description></item><item><title>Security Requirements</title><link>https://owaspsamm.org/model/design/security-requirements/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/design/security-requirements/</guid><description>This practice focuses on security requirements that are important in the context of secure software. A first type deals with typical software-related requirements, to specify objectives and expectations to protect the service and data at the core of the application. A second type deals with requirements that are relative to supplier organisations that are part of the development context of the application, in particular for outsourced development. It is important to streamline the expectations in terms of secure development because outsourced development can have significant impact on the security of the application.</description></item><item><title>Security Testing</title><link>https://owaspsamm.org/model/verification/security-testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/verification/security-testing/</guid><description>With manual and automated security tests, projects within the organization routinely run security tests and review results during development and deployment. They detect and fix basic security issues through scalable automation, where manual security testing focuses on more complex attack vectors with deeper understanding of the software.
Project teams focus on buildout of granular (manual and automated) security test cases based on the business functionality of their software. A central software security group focuses on specification of automated tests for compliance and internal standards.</description></item><item><title>Set Target KPIs</title><link>https://owaspsamm.org/activity/activity-g-sm-2-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-g-sm-2-b/</guid><description>Once the organization has defined its application security metrics, collect enough information to establish realistic goals. Test identified metrics to ensure you can gather data consistently and efficiently over a short period. After the initial testing period, the organization should have enough information to commit to goals and objectives expressed through Key Performance Indicators (KPIs). While several measurements are useful for monitoring the information security program and its effectiveness, KPIs are comprised of the most meaningful and effective metrics.</description></item><item><title>Software Dependencies</title><link>https://owaspsamm.org/model/implementation/secure-build/stream-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/implementation/secure-build/stream-b/</guid><description/></item><item><title>Software Requirements</title><link>https://owaspsamm.org/model/design/security-requirements/stream-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/design/security-requirements/stream-a/</guid><description/></item><item><title>Software teams continuously evaluate application risk profile and update based upon evolving business decisions.</title><link>https://owaspsamm.org/activity/activity-d-ta-3-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-d-ta-3-a/</guid><description>The application portfolio of an organization changes, as well as the conditions and constraints in which an application lives (e.g., driven by the company strategy). Periodically review the risk inventory to ensure correctness of the risk evaluations of the different applications. Have a periodic review at an enterprise-wide level. Also, as your enterprise matures in software assurance, stimulate teams to continuously question which changes in conditions might impact the risk profile.</description></item><item><title>Specific security requirements are utilized during product development.</title><link>https://owaspsamm.org/activity/activity-d-sr-2-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-d-sr-2-a/</guid><description>Security requirements can originate from other sources including policies and legislation, known problems in the application, and intelligence from metrics and feedback (LINK to DM lvl 3). At this level, a more systematic elicitation of security requirements must be achieved by analysing different sources of such requirements. Ensure that appropriate input is received from these sources to help the elicitation of requirements. For example, organize interviews or brainstorm sessions (e.g., in the case of policy and legislation), analyse historical logs or vulnerability systems.</description></item><item><title>Sponsors</title><link>https://owaspsamm.org/sponsors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/sponsors/</guid><description>By sponsoring SAMM, you support a Flagship OWASP project. The OWASP Flagship designation is given to projects that have demonstrated strategic value to OWASP and application security as a whole.
Don&amp;rsquo;t hesitate to contact us.
Proceeds All proceeds from the sponsorship support the mission of the OWASP Foundation and the further development of SAMM, funding
marketing &amp;amp; PR support technical editing &amp;amp; UX support website development and hosting SAMM participation in the Open Security Summit core team summits tooling for the SAMM Benchmark project Sponsorship levels Sponsorship benefits By sponsoring SAMM, you get</description></item><item><title>Standardize In-House Application Security Guidance</title><link>https://owaspsamm.org/activity/activity-g-eg-3-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-g-eg-3-a/</guid><description>Implement a formal training program requiring anyone involved with the software development life-cycle to complete appropriate role and technology-specific training as part of the on-boarding process. Based on the criticality of the application and user’s role, consider restricting access until the on-boarding training has been completed. While the organization may source some modules externally, the program is facilitated and managed in-house and includes content specific to the organization going beyond general security best-practices.</description></item><item><title>Strategy &amp; Metrics</title><link>https://owaspsamm.org/model/governance/strategy-and-metrics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/governance/strategy-and-metrics/</guid><description>Software assurance entails many different activities and concerns. Without an overall plan, you might be spending a lot of effort to build in security, while in fact your efforts may be unaligned, disproportional or even counter-productive. The goal of this security practice is to build an efficient and effective plan for realizing your software security objectives within your organization.
A software security program, that selects and prioritizes activities of the rest of the model, serves as the foundation for your efforts.</description></item><item><title>Supplier Security</title><link>https://owaspsamm.org/model/design/security-requirements/stream-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/design/security-requirements/stream-b/</guid><description/></item><item><title>System Decomissioning / Legacy Management</title><link>https://owaspsamm.org/model/operations/operational-management/stream-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/operations/operational-management/stream-b/</guid><description/></item><item><title>Technology Management</title><link>https://owaspsamm.org/model/design/security-architecture/stream-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/design/security-architecture/stream-b/</guid><description/></item><item><title>The Model</title><link>https://owaspsamm.org/model/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/</guid><description>SAMM model overview Governance Design Implementation Verification Operations Strategy and metrics Threat Assessment Secure Build Architecture Assessment Incident Management Policy and compliance Security Requirements Secure Deployment Requirements-driven Testing Environment Management Education and guidance Security Architecture Defect Management Security Testing Operational Management Introduction The mission of OWASP Software Assurance Maturity Model (SAMM) is to be the prime maturity model for software assurance that provides an effective and measurable way for all types of organizations to analyse and improve their software security posture.</description></item><item><title>Threat Assessment</title><link>https://owaspsamm.org/model/design/threat-assessment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/design/threat-assessment/</guid><description>The Threat Assessment (TA) practice is centered on identification and understanding the project-level risks based on the functionality of the software being developed and characteristics of the runtime environment. From details about threats and likely attacks against each project, the organization as a whole operates more effectively through better decisions about prioritization of initiatives for security. Additionally, decisions for risk acceptance are more informed, therefore better aligned to the business.</description></item><item><title>Threat Modeling</title><link>https://owaspsamm.org/model/design/threat-assessment/stream-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/design/threat-assessment/stream-b/</guid><description/></item><item><title>Threat modeling processes are defined and evaluated periodically for adoption andn effectiveness.</title><link>https://owaspsamm.org/activity/activity-d-ta-2-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-d-ta-2-b/</guid><description>Establish a standard approach to perform structured threat modeling to increase the quality and efficiency of threat modeling within your organization, and ensure that the invested effort is useful and well spent. Structured threat modeling takes into account the different actors, assets and flows to identify an extensive list of potential threats to the application. It defines the inputs required to start the activity (e.g., a technical architecture overview and a data flow diagram), the different steps to identify threats, and the formalisms to describe or annotate the threats.</description></item><item><title>Training and Awareness</title><link>https://owaspsamm.org/model/governance/education-and-guidance/stream-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/governance/education-and-guidance/stream-a/</guid><description/></item><item><title>Training for all developers</title><link>https://owaspsamm.org/activity/activity-g-eg-1-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-g-eg-1-a/</guid><description>Conduct security awareness training for all roles currently involved in the management, development, testing, or auditing of the software. The goal is to increase the awareness of application security threats and risks, security best practices, and secure software design principles. Develop training internally or procure it externally. Ideally, deliver training in person so participants can have discussions as a team, but Computer Based Training (CBT) is also an option. Course content should include a range of topics relevant to application security and privacy, while remaining accessible to a non-technical audience.</description></item><item><title>Use short checklists of security principles</title><link>https://owaspsamm.org/activity/activity-d-sa-1-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-d-sa-1-a/</guid><description>During design, technical staff on the project team use a short checklist of security principles. Typically, security principles include defense in depth, securing the weakest link, use of secure defaults, simplicity in design of security functionality, secure failure, balance of security and usability, running with least privilege, avoidance of security by obscurity, etc. For perimeter interfaces, the design team considers each principle in the context of the overall system and identify features that can be added to bolster security at each such interface.</description></item><item><title>Use short checklists of security principles</title><link>https://owaspsamm.org/activity/activity-d-sa-3-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/activity/activity-d-sa-3-b/</guid><description>For all proprietary development (in-house or acquired), impose and monitor the use of standardized technology. Depending on your organisation, either implement these restrictions into build or deployment tools, by means of after-the-fact automated analysis of application artefacts (e.g., source code, configuration files or deployment artefacts), or periodically review focusing on the correct use of these frameworks. Verify several factors with project teams. Identify use of non-recommended technologies to determine if there are gaps in recommendations versus the organization’s needs.</description></item><item><title>Verification</title><link>https://owaspsamm.org/model/verification/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/model/verification/</guid><description>Verification is focused on the processes and activities related to how an organization checks, and tests artifacts produced throughout software development. This typically includes quality assurance work such as testing, but it can also include other review and evaluation activities.</description></item><item><title>Version 1.5</title><link>https://owaspsamm.org/v1-5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/v1-5/</guid><description> Some text about version 1.5
Downloads Core Model How-to Guide Quick Start Guide See also SAMM 1.5 Assessment Toolbox SAMM 1.5 Assessment Toolbox Example SAMM Project Wiki Page</description></item></channel></rss>